{"version":3,"sources":["reducers/products.js","constants/ActionTypes.js","components/Products/Product/index.js","components/Products/index.js","actions/index.js","reducers/cart.js","reducers/index.js","components/Cart/CartItem/index.js","components/Cart/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["products","state","action","type","inventory","combineReducers","byId","reduce","obj","product","id","productId","visibleIds","map","getProduct","getVisibleProducts","Product","onAddToCartClicked","Col","xs","md","key","style","marginBottom","className","width","height","src","img","alt","name","color","price_currency","price","Button","onClick","variant","disabled","connect","addToCart","dispatch","getState","addToCartUnsafe","Container","Row","initialState","addedIds","quantityById","indexOf","cart","getAddedIds","fromCart","getQuantity","fromRroduct","getTotal","total","toFixed","getCartProducts","quantity","CartItem","onRemoveClick","display","fontWeight","href","checkout","cb","timeout","setTimeout","removeToCart","removeToCartUnsafe","useState","show","setShow","handleClose","hasProducts","length","itemCart","index","marginTop","Modal","onHide","Header","closeButton","Title","Body","Footer","App","Badge","Boolean","window","location","hostname","match","middleware","thunk","store","createStore","reducer","applyMiddleware","receiveProducts","_products","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5456a72e.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\nimport {RECEIVE_PRODUCTS, ADD_TO_CART, REMOVE_TO_CART} from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n            return {\n                ...state,\n                inventory: state.inventory - 1\n            };\n        case REMOVE_TO_CART:\n            return {\n                ...state,\n                inventory: state.inventory + action.inventory\n            };\n        default:\n            return state\n    }\n};\n\nconst byId = (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVE_PRODUCTS:\n            return {\n                ...state,\n                ...action.products.reduce((obj, product) => {\n                    obj[product.id] = product;\n                    return obj\n                }, {})\n            };\n        default:\n            const { productId } = action;\n            if (productId) {\n                return {\n                    ...state,\n                    [productId]: products(state[productId], action)\n                }\n            }\n            return state\n    }\n};\n\nconst visibleIds = (state = [], action) => {\n    switch (action.type) {\n        case RECEIVE_PRODUCTS:\n            return action.products.map(product => product.id)\n        default:\n            return state\n    }\n};\n\nexport default combineReducers({\n    byId,\n    visibleIds\n})\n\nexport const getProduct = (state, id) =>\n    state.byId[id];\n\nexport const getVisibleProducts = state =>\n    state.visibleIds.map(id => getProduct(state, id))\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const REMOVE_TO_CART = 'REMOVE_TO_CART'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\n","import React from 'react'\nimport {Col} from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nconst Product = ({ product, onAddToCartClicked }) => (\n\n\n        <Col xs={6} md={2} key={product.id} style={{marginBottom:'20px'}}>\n            <div className=\"image\" style={{width:'180px', height:'140px'}}>\n                <img src={product.img} alt={product.name} style={{width: '100%', height:'100%'}}/>\n            </div>\n\n            <p>{product.name} x <span style={{color:'red'}}>{product.inventory}</span></p>\n            <p><span>{product.price_currency}</span>{product.price}</p>\n            <Button\n                onClick={onAddToCartClicked}\n                variant=\"primary\"\n                disabled={product.inventory > 0 ? '' : 'disabled'}\n            >{product.inventory > 0 ? 'Add to cart' : 'Sold Out'}</Button>{' '}\n        </Col>\n\n\n);\n\n\nexport default Product\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../../actions'\nimport { getVisibleProducts } from '../../reducers/products'\nimport Product from './Product';\nimport { Container,Row } from 'react-bootstrap';\n\nconst Products = ({ products, addToCart }) => (\n        <Container>\n            <Row>\n                {\n                    products.map(product =>\n                        <Product\n                            key={product.id}\n                            product={product}\n                            onAddToCartClicked={() => addToCart(product.id)} />\n                    )\n                }\n            </Row>\n        </Container>\n);\n\nconst mapStateToProps = state => ({\n    products: getVisibleProducts(state.products)\n});\n\nexport default connect(\n    mapStateToProps,\n    { addToCart }\n)(Products)\n","import _products from '../api/products'\nimport * as types from '../constants/ActionTypes'\n\nconst TIMEOUT = 100;\nconst getProducts = (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT);\nconst buyProducts = (payload, cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT);\n\nconst receiveProducts = products => ({\n    type: types.RECEIVE_PRODUCTS,\n    products\n});\n\nexport const getAllProducts = () => dispatch => {\n    getProducts(products => {\n        dispatch(receiveProducts(products))\n    })\n};\n\nexport const getProductById = (productId) => {\n    if(_products.length > 0 ){\n        return _products[productId-1];\n    }\n\n};\nconst addToCartUnsafe = productId => ({\n    type: types.ADD_TO_CART,\n    productId\n});\n\n\nexport const addToCart = productId => (dispatch, getState) => {\n    if (getState().products.byId[productId].inventory > 0) {\n        dispatch(addToCartUnsafe(productId))\n    }\n};\n\n\nconst removeToCartUnsafe = (productId,inventory) => ({\n    type: types.REMOVE_TO_CART,\n    productId,\n    inventory\n});\n\nexport const removeToCart = (productId, inventory) => (dispatch) => {\n        dispatch(removeToCartUnsafe(productId, inventory))\n};\n\nexport const checkout = products => (dispatch, getState) => {\n    const { cart } = getState();\n\n    dispatch({\n        type: types.CHECKOUT_REQUEST\n    });\n    buyProducts(products, () => {\n        dispatch({\n            type: types.CHECKOUT_SUCCESS,\n            cart\n        })\n    })\n};\n\n\n\n\n","import {\n    ADD_TO_CART,\n    CHECKOUT_REQUEST,\n    CHECKOUT_FAILURE,\n    REMOVE_TO_CART\n} from '../constants/ActionTypes'\n\nconst initialState = {\n    addedIds: [],\n    quantityById: {}\n};\n\nconst addedIds = (state = initialState.addedIds, action) => {\n    switch (action.type) {\n        case ADD_TO_CART:\n            if (state.indexOf(action.productId) !== -1) {\n                return state\n            }\n            return [ ...state, action.productId ];\n        default:\n            return state\n    }\n};\n\nconst quantityById = (state = initialState.quantityById, action) => {\n    const { productId } = action;\n    switch (action.type) {\n        case ADD_TO_CART:\n            return { ...state,\n                [productId]: (state[productId] || 0) + 1\n            };\n        case REMOVE_TO_CART:\n            return { ...state,\n                [productId]: 0\n            };\n        default:\n            return state\n    }\n};\n\nexport const getQuantity = (state, productId) =>\n    state.quantityById[productId] || 0;\n\nexport const getAddedIds = state => state.addedIds;\n\nconst cart = (state = initialState, action) => {\n    switch (action.type) {\n        case CHECKOUT_REQUEST:\n            return initialState\n        case CHECKOUT_FAILURE:\n            return action.cart\n        default:\n            return {\n                addedIds: addedIds(state.addedIds, action),\n                quantityById: quantityById(state.quantityById, action)\n            }\n    }\n};\n\nexport default cart\n","import { combineReducers } from 'redux'\nimport products, * as fromRroduct from './products'\nimport cart, * as fromCart from './cart'\n\nexport default combineReducers({\n    cart,\n    products\n})\nconst getAddedIds = state => fromCart.getAddedIds(state.cart);\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id);\nconst getProduct = (state, id) => fromRroduct.getProduct(state.products, id);\n\nexport const getTotal = state =>\n    getAddedIds(state)\n        .reduce((total, id) =>\n            total + getProduct(state, id).price * getQuantity(state, id),\n            0\n        )\n        .toFixed(2);\n\nexport const getCartProducts = state =>\n    getAddedIds(state).map(id => ({\n        ...getProduct(state, id),\n        quantity: getQuantity(state, id)\n    }));\n","import React from 'react'\n\nconst CartItem = ({ product, onRemoveClick}) => {\n\n    return (\n        <div>\n            <div className=\"image\" style={{width:'50px', height:'50px', display:'inline-block'}}>\n                <img src={product.img} alt={product.name} style={{width: '100%', height:'100%'}}/>\n            </div>\n            <p style={{display:'inline-block'}}>{product.name} - {product.price} x <span style={{fontWeight: 'bold'}}>{product.quantity}</span></p>\n            <p onClick={onRemoveClick}><a href=\"#\">Remove</a></p>\n        </div>\n    );\n}\n\n\nexport default CartItem\n","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport {Button, Container, Modal} from 'react-bootstrap';\nimport { getTotal, getCartProducts } from '../../reducers'\nimport { checkout, removeToCart } from '../../actions'\nimport CartItem from './CartItem'\n\nconst Cart = ({ products, total, checkout, removeToCart }) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const hasProducts = products.length > 0 && total > 0;\n    const itemCart = hasProducts ?\n        products.map((product,index) => (\n            <div key={index}>\n                {product.quantity > 0 ?\n                    (<CartItem product={product} onRemoveClick={() => removeToCart(product.id, product.quantity)} />) : ''\n                }\n\n            </div>\n        )) : <h5> Empty...</h5>;\n    const handleCheckout = () => {\n        checkout(products);\n    };\n    return (\n        <Container style={{marginTop: '10px'}}>\n            <Button variant=\"warning\" onClick={handleShow}>\n                CART\n            </Button>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Cart</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {itemCart}\n                    {hasProducts ? (<h3>Total: {total}</h3>) : ''}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant={hasProducts ? \"primary\" : \"secondary\"} disabled={!hasProducts} onClick={handleCheckout}>\n                        Checkout\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    products: getCartProducts(state),\n    total: getTotal(state)\n})\n\nexport default connect(\n    mapStateToProps,\n    { checkout, removeToCart }\n)(Cart)\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Badge} from 'react-bootstrap';\nimport Products from '../components/Products';\nimport Cart from '../components/Cart';\nfunction App() {\n\n  return (\n      <Container>\n          <Row>\n              <Col xs={6} md={6} key={1}>\n                 <h1>\n                    Shopping Cart <Badge variant=\"danger\">New</Badge>\n                </h1>\n              </Col>\n              <Col xs={6} md={6} key={2}>\n                  <Cart/>\n              </Col>\n          </Row>\n          <hr/>\n          <Products/>\n      </Container>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport './index.css';\nimport App from './containers/App';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers'\nimport { createStore, applyMiddleware } from 'redux'\nimport { getAllProducts } from './actions'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst middleware = [ thunk ];\nif (process.env.NODE_ENV !== 'production') {\n    middleware.push(createLogger());\n}\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n);\n\nstore.dispatch(getAllProducts())\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}